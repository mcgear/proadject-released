{"version":3,"file":"component---src-pages-features-jsx-0323422c984f83533d07.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/icons/PlasmicIcon__Done24Pxsvg2.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicBullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicBullet.module.css","webpack://gatsby-starter-default/./src/components/Bullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicHomeCta.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicHomeCta.module.css","webpack://gatsby-starter-default/./src/components/HomeCta.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicFeatures.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicFeatures.module.css","webpack://gatsby-starter-default/./src/pages/features.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/images/simpleProject.png"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Done24Pxsvg2Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path d={\"M0 0h24v24H0z\"} fill={\"none\"}></path>\n\n      <path d={\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"}></path>\n    </svg>\n  )\n}\n\nexport default Done24Pxsvg2Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: 2iCIjF9Y6NHD\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicBullet.module.css\" // plasmic-import: 2iCIjF9Y6NHD/css\nimport Done24Pxsvg2Icon from \"./icons/PlasmicIcon__Done24Pxsvg2\" // plasmic-import: Fa0nVqdhobSa/icon\n\nexport const PlasmicBullet__VariantProps = new Array()\n\nexport const PlasmicBullet__ArgProps = new Array(\"children\")\n\nfunction PlasmicBullet__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}\n    >\n      <Done24Pxsvg2Icon\n        data-plasmic-name={\"svg\"}\n        data-plasmic-override={overrides.svg}\n        className={classNames(projectcss.all, sty.svg)}\n        role={\"img\"}\n      />\n\n      {p.renderPlasmicSlot({\n        defaultContents: \"Lorem ipsum dolor velit\",\n        value: args.children,\n      })}\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"svg\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicBullet__ArgProps,\n      internalVariantPropNames: PlasmicBullet__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicBullet__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBullet\"\n  } else {\n    func.displayName = `PlasmicBullet.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBullet = Object.assign(\n  // Top-level PlasmicBullet renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicBullet\n    internalVariantProps: PlasmicBullet__VariantProps,\n    internalArgProps: PlasmicBullet__ArgProps,\n  }\n)\n\nexport default PlasmicBullet\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicBullet-module--root--lkpOj\";\nexport var svg = \"PlasmicBullet-module--svg--lgHb9\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBullet } from \"./plasmic/proadject_com/PlasmicBullet\"\n\nfunction Bullet_(props, ref) {\n  // Use PlasmicBullet to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBullet are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all BulletProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicBullet root={{ ref }} {...props} />\n}\n\nconst Bullet = React.forwardRef(Bullet_)\n\nexport default Bullet\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: zKOyIPbNoEM\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport TextInput from \"../../TextInput\" // plasmic-import: Af92kW8SHWlh/component\nimport Button from \"../../Button\" // plasmic-import: 58aE5A8cv3Bo/component\nimport { useScreenVariants as useScreenVariantspl90GPsIiFl9 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: PL90GPsIiFl9/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicHomeCta.module.css\" // plasmic-import: zKOyIPbNoEM/css\nimport LogoIcon from \"./icons/PlasmicIcon__Logo\" // plasmic-import: cIFaNOfJhdmJ/icon\n\nexport const PlasmicHomeCta__VariantProps = new Array()\n\nexport const PlasmicHomeCta__ArgProps = new Array()\n\nfunction PlasmicHomeCta__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantspl90GPsIiFl9(),\n  })\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__rFxGc)}\n      >\n        <div\n          className={classNames(\n            projectcss.all,\n            projectcss.__wab_text,\n            sty.text__oMHlD\n          )}\n        >\n          {\"Powering weather applications\"}\n        </div>\n\n        <div\n          className={classNames(\n            projectcss.all,\n            projectcss.__wab_text,\n            sty.text__auQh4\n          )}\n        >\n          {hasVariant(globalVariants, \"screen\", \"mobile\")\n            ? \"Take the argh out of apps.  Release the Krakyn.\"\n            : \"Take the argh out of apps.  Release the Krakyn.\"}\n        </div>\n\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__tgtbJ)}\n        >\n          <TextInput\n            data-plasmic-name={\"textInput\"}\n            data-plasmic-override={overrides.textInput}\n            className={classNames(\"__wab_instance\", sty.textInput)}\n            color={\"dark\"}\n            placeholder={\"Your email...\"}\n          />\n\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n            color={\"blue\"}\n          >\n            {\"Subscribe\"}\n          </Button>\n        </p.Stack>\n\n        <div\n          className={classNames(\n            projectcss.all,\n            projectcss.__wab_text,\n            sty.text__p3OtF\n          )}\n        >\n          {\"7 days free trial. No credit card required.\"}\n        </div>\n      </p.Stack>\n\n      {(hasVariant(globalVariants, \"screen\", \"mobile\") ? true : true) ? (\n        <div className={classNames(projectcss.all, sty.freeBox___62Ccu)}>\n          <LogoIcon\n            data-plasmic-name={\"svg\"}\n            data-plasmic-override={overrides.svg}\n            className={classNames(projectcss.all, sty.svg)}\n            role={\"img\"}\n          />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"textInput\", \"textbox\", \"button\", \"svg\"],\n  textInput: [\"textInput\", \"textbox\"],\n  button: [\"button\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHomeCta__ArgProps,\n      internalVariantPropNames: PlasmicHomeCta__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicHomeCta__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHomeCta\"\n  } else {\n    func.displayName = `PlasmicHomeCta.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHomeCta = Object.assign(\n  // Top-level PlasmicHomeCta renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    textInput: makeNodeComponent(\"textInput\"),\n    button: makeNodeComponent(\"button\"),\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicHomeCta\n    internalVariantProps: PlasmicHomeCta__VariantProps,\n    internalArgProps: PlasmicHomeCta__ArgProps,\n  }\n)\n\nexport default PlasmicHomeCta\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicHomeCta-module--root--vZsn9\";\nexport var freeBox__rFxGc = \"PlasmicHomeCta-module--freeBox__rFxGc--m5AHR\";\nexport var text__oMHlD = \"PlasmicHomeCta-module--text__oMHlD--m4821\";\nexport var text__auQh4 = \"PlasmicHomeCta-module--text__auQh4--6e8UP\";\nexport var freeBox__tgtbJ = \"PlasmicHomeCta-module--freeBox__tgtbJ--UmL8d\";\nexport var textInput = \"PlasmicHomeCta-module--textInput--rn9gb\";\nexport var svg__rMnWe = \"PlasmicHomeCta-module--svg__rMnWe--pqDwe\";\nexport var svg__d8Lf = \"PlasmicHomeCta-module--svg__d8Lf--Qano7\";\nexport var button = \"PlasmicHomeCta-module--button--H0DaF\";\nexport var svg__vIhFb = \"PlasmicHomeCta-module--svg__vIhFb--c-zTd\";\nexport var svg__aybYq = \"PlasmicHomeCta-module--svg__aybYq--r51pv\";\nexport var text__p3OtF = \"PlasmicHomeCta-module--text__p3OtF--13l4L\";\nexport var freeBox___62Ccu = \"PlasmicHomeCta-module--freeBox___62Ccu--4Y4VI\";\nexport var svg = \"PlasmicHomeCta-module--svg--+BWsV\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHomeCta } from \"./plasmic/proadject_com/PlasmicHomeCta\"\n\nfunction HomeCta_(props, ref) {\n  // Use PlasmicHomeCta to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHomeCta are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HomeCtaProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHomeCta root={{ ref }} {...props} />\n}\n\nconst HomeCta = React.forwardRef(HomeCta_)\n\nexport default HomeCta\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: rTIZKFr5lCN0\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: DxSpBmtY3B_/component\nimport Section from \"../../Section\" // plasmic-import: 6gH0r-9r71uO/component\nimport Bullet from \"../../Bullet\" // plasmic-import: 2iCIjF9Y6NHD/component\nimport Button from \"../../Button\" // plasmic-import: 58aE5A8cv3Bo/component\nimport HomeCta from \"../../HomeCta\" // plasmic-import: zKOyIPbNoEM/component\nimport Footer from \"../../Footer\" // plasmic-import: FHue2TrcCQx/component\nimport { useScreenVariants as useScreenVariantspl90GPsIiFl9 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: PL90GPsIiFl9/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicFeatures.module.css\" // plasmic-import: rTIZKFr5lCN0/css\nimport simpleProjectPdtkuo9SfnV3 from \"./images/simpleProject.png\" // plasmic-import: PDTKUO9SfnV3/picture\n\nexport const PlasmicFeatures__VariantProps = new Array()\n\nexport const PlasmicFeatures__ArgProps = new Array()\n\nfunction PlasmicFeatures__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantspl90GPsIiFl9(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <Section\n            data-plasmic-name={\"section\"}\n            data-plasmic-override={overrides.section}\n            className={classNames(\"__wab_instance\", sty.section)}\n            hasSubtitle={\"hasSubtitle\"}\n            hasTitle={\"hasTitle\"}\n            subtitle={\n              \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n            }\n            title={\"The ultimate in feature set.\"}\n          >\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__yV1S)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.columns__ryLZt)}\n              >\n                <div className={classNames(projectcss.all, sty.column__p2PW)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__kyiDy)}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___6KzRe\n                      )}\n                    >\n                      {\"Powerful suite of tools\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__x0Uzz\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__jF4Jn\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__csRmq\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__uJCjs\n                      )}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__oJcTs\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__p5Coo)}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__p1Cl7\n                        )}\n                        color={\"blue\"}\n                      >\n                        {\"Start free trial\"}\n                      </Button>\n\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__uac3X\n                        )}\n                        color={\"outlineBlue\"}\n                      >\n                        {\"View demo\"}\n                      </Button>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column__kfn77)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img___4WaRq)}\n                    displayHeight={\"auto\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"100%\"}\n                    src={{\n                      src: simpleProjectPdtkuo9SfnV3,\n                      fullWidth: 1000,\n                      fullHeight: 924,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.columns__f1Yjm)}\n              >\n                <div className={classNames(projectcss.all, sty.column__qM33P)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__zjHg)}\n                    displayHeight={\"auto\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"100%\"}\n                    src={{\n                      src: simpleProjectPdtkuo9SfnV3,\n                      fullWidth: 1000,\n                      fullHeight: 924,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column___5DytA)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__rPrUx)}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__oK9El\n                      )}\n                    >\n                      {\"Powerful suite of tools\"}\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__zMxe\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__jjxE7\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__mObQc\n                      )}\n                    />\n\n                    <Bullet\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.bullet__m2Nkw\n                      )}\n                    />\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__ePjiv\n                      )}\n                    >\n                      {\n                        \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur.\"\n                      }\n                    </div>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.freeBox___75YXl\n                      )}\n                    >\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__yPOcH\n                        )}\n                        color={\"blue\"}\n                      >\n                        {\"Start free trial\"}\n                      </Button>\n\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__vrbkw\n                        )}\n                        color={\"outlineBlue\"}\n                      >\n                        {\"View demo\"}\n                      </Button>\n                    </p.Stack>\n                  </p.Stack>\n                </div>\n              </p.Stack>\n            </p.Stack>\n          </Section>\n\n          <HomeCta\n            data-plasmic-name={\"homeCta\"}\n            data-plasmic-override={overrides.homeCta}\n            className={classNames(\"__wab_instance\", sty.homeCta)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"header\", \"section\", \"homeCta\", \"footer\"],\n  header: [\"header\"],\n  section: [\"section\"],\n  homeCta: [\"homeCta\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicFeatures__ArgProps,\n      internalVariantPropNames: PlasmicFeatures__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicFeatures__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFeatures\"\n  } else {\n    func.displayName = `PlasmicFeatures.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFeatures = Object.assign(\n  // Top-level PlasmicFeatures renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    section: makeNodeComponent(\"section\"),\n    homeCta: makeNodeComponent(\"homeCta\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicFeatures\n    internalVariantProps: PlasmicFeatures__VariantProps,\n    internalArgProps: PlasmicFeatures__ArgProps,\n  }\n)\n\nexport default PlasmicFeatures\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicFeatures-module--root--zMth9\";\nexport var header = \"PlasmicFeatures-module--header--5rptI\";\nexport var section = \"PlasmicFeatures-module--section--8Cc4D\";\nexport var freeBox__yV1S = \"PlasmicFeatures-module--freeBox__yV1S--oc266\";\nexport var columns__ryLZt = \"PlasmicFeatures-module--columns__ryLZt--+YhXL\";\nexport var column__p2PW = \"PlasmicFeatures-module--column__p2PW--mYRpW\";\nexport var freeBox__kyiDy = \"PlasmicFeatures-module--freeBox__kyiDy--br+0E\";\nexport var text___6KzRe = \"PlasmicFeatures-module--text___6KzRe--elDfy\";\nexport var text__x0Uzz = \"PlasmicFeatures-module--text__x0Uzz--sa0QA\";\nexport var bullet__jF4Jn = \"PlasmicFeatures-module--bullet__jF4Jn--WwrIY\";\nexport var bullet__csRmq = \"PlasmicFeatures-module--bullet__csRmq--6NLBk\";\nexport var bullet__uJCjs = \"PlasmicFeatures-module--bullet__uJCjs--Du5Fr\";\nexport var text__oJcTs = \"PlasmicFeatures-module--text__oJcTs--jkJmd\";\nexport var freeBox__p5Coo = \"PlasmicFeatures-module--freeBox__p5Coo--4fsLC\";\nexport var button__p1Cl7 = \"PlasmicFeatures-module--button__p1Cl7--Huamq\";\nexport var svg__o0Dsk = \"PlasmicFeatures-module--svg__o0Dsk--oB0Gh\";\nexport var svg__nlFpB = \"PlasmicFeatures-module--svg__nlFpB--3wpVW\";\nexport var button__uac3X = \"PlasmicFeatures-module--button__uac3X--Dk8yj\";\nexport var svg___2MMa = \"PlasmicFeatures-module--svg___2MMa--sugB3\";\nexport var svg__ewqnz = \"PlasmicFeatures-module--svg__ewqnz--aQD2G\";\nexport var column__kfn77 = \"PlasmicFeatures-module--column__kfn77--CzEsY\";\nexport var img___4WaRq = \"PlasmicFeatures-module--img___4WaRq--3rsrn\";\nexport var __wab_imgSpacer = \"PlasmicFeatures-module--__wab_img-spacer--WOb5O\";\nexport var columns__f1Yjm = \"PlasmicFeatures-module--columns__f1Yjm--rIRSj\";\nexport var column__qM33P = \"PlasmicFeatures-module--column__qM33P--87fxS\";\nexport var img__zjHg = \"PlasmicFeatures-module--img__zjHg--4ODsR\";\nexport var column___5DytA = \"PlasmicFeatures-module--column___5DytA--iL3oq\";\nexport var freeBox__rPrUx = \"PlasmicFeatures-module--freeBox__rPrUx--LMu9+\";\nexport var text__oK9El = \"PlasmicFeatures-module--text__oK9El--OMmnn\";\nexport var text__zMxe = \"PlasmicFeatures-module--text__zMxe--wf7Sq\";\nexport var bullet__jjxE7 = \"PlasmicFeatures-module--bullet__jjxE7--jcy5q\";\nexport var bullet__mObQc = \"PlasmicFeatures-module--bullet__mObQc--8RGjp\";\nexport var bullet__m2Nkw = \"PlasmicFeatures-module--bullet__m2Nkw--PDeIs\";\nexport var text__ePjiv = \"PlasmicFeatures-module--text__ePjiv--jD+wT\";\nexport var freeBox___75YXl = \"PlasmicFeatures-module--freeBox___75YXl--VTfmk\";\nexport var button__yPOcH = \"PlasmicFeatures-module--button__yPOcH--VLUyv\";\nexport var svg__pQcAf = \"PlasmicFeatures-module--svg__pQcAf--IgUsv\";\nexport var svg__iNe7S = \"PlasmicFeatures-module--svg__iNe7S--JXnWs\";\nexport var button__vrbkw = \"PlasmicFeatures-module--button__vrbkw--0TzO-\";\nexport var svg__njmfF = \"PlasmicFeatures-module--svg__njmfF--T+wqw\";\nexport var svg__iwo91 = \"PlasmicFeatures-module--svg__iwo91--yhXtJ\";\nexport var homeCta = \"PlasmicFeatures-module--homeCta--ccACk\";\nexport var footer = \"PlasmicFeatures-module--footer--0vbFh\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFeatures } from \"../components/plasmic/proadject_com/PlasmicFeatures\"\n\nfunction Features() {\n  // Use PlasmicFeatures to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFeatures are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicFeatures is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicFeatures />\n}\n\nexport default Features\n","export default __webpack_public_path__ + \"static/simpleProject-69c5091d6233e25e8ef6cb029da8bb65.png\";"],"names":["props","className","style","title","restProps","xmlns","viewBox","height","width","fill","classNames","d","PlasmicBullet__VariantProps","Array","PlasmicBullet__ArgProps","PlasmicDescendants","root","svg","makeNodeComponent","nodeName","func","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","dataFetches","as","hasGap","projectcss","role","p","defaultContents","value","children","PlasmicBullet__RenderFunc","displayName","PlasmicBullet","Object","assign","internalVariantProps","internalArgProps","Bullet_","ref","React","PlasmicHomeCta__VariantProps","PlasmicHomeCta__ArgProps","textInput","button","globalVariants","ensureGlobalVariants","screen","useScreenVariantspl90GPsIiFl9","hasVariant","TextInput","color","placeholder","Button","PlasmicHomeCta__RenderFunc","PlasmicHomeCta","HomeCta_","PlasmicFeatures__VariantProps","PlasmicFeatures__ArgProps","header","section","homeCta","footer","Header","Section","hasSubtitle","hasTitle","subtitle","Bullet","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","simpleProjectPdtkuo9SfnV3","fullWidth","fullHeight","aspectRatio","undefined","HomeCta","Footer","PlasmicFeatures__RenderFunc","PlasmicFeatures"],"sourceRoot":""}