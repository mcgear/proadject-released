{"version":3,"file":"component---src-pages-pricing-jsx-4638a1283e1f67214f26.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/icons/PlasmicIcon__Done24Pxsvg2.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicBullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicBullet.module.css","webpack://gatsby-starter-default/./src/components/Bullet.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicBaseCard.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicBaseCard.module.css","webpack://gatsby-starter-default/./src/components/BaseCard.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicPlan.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicPlan.module.css","webpack://gatsby-starter-default/./src/components/Plan.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicFaq.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicFaq.module.css","webpack://gatsby-starter-default/./src/components/Faq.jsx","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicPricing.module.css","webpack://gatsby-starter-default/./src/components/plasmic/proadject_com/PlasmicPricing.jsx","webpack://gatsby-starter-default/./src/pages/pricing.jsx"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Done24Pxsvg2Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path d={\"M0 0h24v24H0z\"} fill={\"none\"}></path>\n\n      <path d={\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"}></path>\n    </svg>\n  )\n}\n\nexport default Done24Pxsvg2Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: 2iCIjF9Y6NHD\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicBullet.module.css\" // plasmic-import: 2iCIjF9Y6NHD/css\nimport Done24Pxsvg2Icon from \"./icons/PlasmicIcon__Done24Pxsvg2\" // plasmic-import: Fa0nVqdhobSa/icon\n\nexport const PlasmicBullet__VariantProps = new Array()\n\nexport const PlasmicBullet__ArgProps = new Array(\"children\")\n\nfunction PlasmicBullet__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}\n    >\n      <Done24Pxsvg2Icon\n        data-plasmic-name={\"svg\"}\n        data-plasmic-override={overrides.svg}\n        className={classNames(projectcss.all, sty.svg)}\n        role={\"img\"}\n      />\n\n      {p.renderPlasmicSlot({\n        defaultContents: \"Lorem ipsum dolor velit\",\n        value: args.children,\n      })}\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"svg\"],\n  svg: [\"svg\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicBullet__ArgProps,\n      internalVariantPropNames: PlasmicBullet__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicBullet__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBullet\"\n  } else {\n    func.displayName = `PlasmicBullet.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBullet = Object.assign(\n  // Top-level PlasmicBullet renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    svg: makeNodeComponent(\"svg\"),\n    // Metadata about props expected for PlasmicBullet\n    internalVariantProps: PlasmicBullet__VariantProps,\n    internalArgProps: PlasmicBullet__ArgProps,\n  }\n)\n\nexport default PlasmicBullet\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicBullet-module--root--lkpOj\";\nexport var svg = \"PlasmicBullet-module--svg--lgHb9\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBullet } from \"./plasmic/proadject_com/PlasmicBullet\"\n\nfunction Bullet_(props, ref) {\n  // Use PlasmicBullet to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBullet are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all BulletProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicBullet root={{ ref }} {...props} />\n}\n\nconst Bullet = React.forwardRef(Bullet_)\n\nexport default Bullet\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: iNAkhDWaZXsp\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicBaseCard.module.css\" // plasmic-import: iNAkhDWaZXsp/css\n\nexport const PlasmicBaseCard__VariantProps = new Array(\"long\")\n\nexport const PlasmicBaseCard__ArgProps = new Array(\"children\", \"iconBack\")\n\nfunction PlasmicBaseCard__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(projectcss.all, projectcss.root_reset, sty.root, {\n        [sty.root__long]: hasVariant(variants, \"long\", \"long\"),\n      })}\n    >\n      <div\n        className={classNames(projectcss.all, sty.freeBox__sgSxC, {\n          [sty.freeBox__long__sgSxCiphMa]: hasVariant(variants, \"long\", \"long\"),\n        })}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n          value: args.children,\n          className: classNames(sty.slotTargetChildren, {\n            [sty.slotTargetChildren__long]: hasVariant(\n              variants,\n              \"long\",\n              \"long\"\n            ),\n          }),\n        })}\n      </div>\n\n      {(hasVariant(variants, \"long\", \"long\") ? true : true) ? (\n        <div\n          className={classNames(projectcss.all, sty.freeBox__dahcG, {\n            [sty.freeBox__long__dahcGiphMa]: hasVariant(\n              variants,\n              \"long\",\n              \"long\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <svg\n                className={classNames(projectcss.all, sty.svg__pB5El)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.iconBack,\n          })}\n        </div>\n      ) : null}\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicBaseCard__ArgProps,\n      internalVariantPropNames: PlasmicBaseCard__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicBaseCard__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicBaseCard\"\n  } else {\n    func.displayName = `PlasmicBaseCard.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicBaseCard = Object.assign(\n  // Top-level PlasmicBaseCard renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicBaseCard\n    internalVariantProps: PlasmicBaseCard__VariantProps,\n    internalArgProps: PlasmicBaseCard__ArgProps,\n  }\n)\n\nexport default PlasmicBaseCard\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicBaseCard-module--root--WxqGE\";\nexport var root__long = \"PlasmicBaseCard-module--root__long--C4SVE\";\nexport var freeBox__sgSxC = \"PlasmicBaseCard-module--freeBox__sgSxC--UgL6-\";\nexport var freeBox__long__sgSxCiphMa = \"PlasmicBaseCard-module--freeBox__long__sgSxCiphMa--bnl-w\";\nexport var slotTargetChildren = \"PlasmicBaseCard-module--slotTargetChildren--TKr2a\";\nexport var slotTargetChildren__long = \"PlasmicBaseCard-module--slotTargetChildren__long--GjPJC\";\nexport var freeBox__dahcG = \"PlasmicBaseCard-module--freeBox__dahcG--5HsmT\";\nexport var freeBox__long__dahcGiphMa = \"PlasmicBaseCard-module--freeBox__long__dahcGiphMa--3r0UU\";\nexport var svg__pB5El = \"PlasmicBaseCard-module--svg__pB5El--6ZkI7\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicBaseCard } from \"./plasmic/proadject_com/PlasmicBaseCard\"\n\nfunction BaseCard_(props, ref) {\n  // Use PlasmicBaseCard to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicBaseCard are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all BaseCardProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicBaseCard root={{ ref }} {...props} />\n}\n\nconst BaseCard = React.forwardRef(BaseCard_)\n\nexport default BaseCard\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: wbMIVl9fXxkQ\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport BaseCard from \"../../BaseCard\" // plasmic-import: iNAkhDWaZXsp/component\nimport Bullet from \"../../Bullet\" // plasmic-import: 2iCIjF9Y6NHD/component\nimport Button from \"../../Button\" // plasmic-import: 58aE5A8cv3Bo/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicPlan.module.css\" // plasmic-import: wbMIVl9fXxkQ/css\n\nexport const PlasmicPlan__VariantProps = new Array()\n\nexport const PlasmicPlan__ArgProps = new Array(\n  \"price\",\n  \"name\",\n  \"description\",\n  \"children\"\n)\n\nfunction PlasmicPlan__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <BaseCard\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\"__wab_instance\", sty.root)}\n    >\n      <div className={classNames(projectcss.all, sty.freeBox__mAtbg)}>\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__nblwG)}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: \"Basic\",\n            value: args.name,\n            className: classNames(sty.slotTargetName),\n          })}\n\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <div\n                className={classNames(\n                  projectcss.all,\n                  projectcss.__wab_text,\n                  sty.text__ut9Ar\n                )}\n              >\n                {\"$10\"}\n              </div>\n            ),\n\n            value: args.price,\n          })}\n\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__v0Agt)}\n              >\n                <Bullet\n                  className={classNames(\"__wab_instance\", sty.bullet__fpsmr)}\n                />\n\n                <Bullet\n                  className={classNames(\"__wab_instance\", sty.bullet__vsYSw)}\n                />\n\n                <Bullet\n                  className={classNames(\"__wab_instance\", sty.bullet__eZSE)}\n                />\n              </p.Stack>\n            ),\n\n            value: args.description,\n          })}\n\n          <div className={classNames(projectcss.all, sty.freeBox__cw6Ca)}>\n            {p.renderPlasmicSlot({\n              defaultContents: (\n                <Button\n                  className={classNames(\"__wab_instance\", sty.button__q34Ey)}\n                  color={\"outlineBlue\"}\n                >\n                  {\"Get started\"}\n                </Button>\n              ),\n\n              value: args.children,\n            })}\n          </div>\n        </p.Stack>\n      </div>\n    </BaseCard>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicPlan__ArgProps,\n      internalVariantPropNames: PlasmicPlan__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicPlan__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicPlan\"\n  } else {\n    func.displayName = `PlasmicPlan.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicPlan = Object.assign(\n  // Top-level PlasmicPlan renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicPlan\n    internalVariantProps: PlasmicPlan__VariantProps,\n    internalArgProps: PlasmicPlan__ArgProps,\n  }\n)\n\nexport default PlasmicPlan\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicPlan-module--root--sDiB4\";\nexport var freeBox__mAtbg = \"PlasmicPlan-module--freeBox__mAtbg--cDAhQ\";\nexport var freeBox__nblwG = \"PlasmicPlan-module--freeBox__nblwG--doN5T\";\nexport var slotTargetName = \"PlasmicPlan-module--slotTargetName--suxxT\";\nexport var text__ut9Ar = \"PlasmicPlan-module--text__ut9Ar--gCWwb\";\nexport var freeBox__v0Agt = \"PlasmicPlan-module--freeBox__v0Agt--i1sgD\";\nexport var bullet__fpsmr = \"PlasmicPlan-module--bullet__fpsmr--fY3jX\";\nexport var bullet__vsYSw = \"PlasmicPlan-module--bullet__vsYSw--BdtZB\";\nexport var bullet__eZSE = \"PlasmicPlan-module--bullet__eZSE--oTyYe\";\nexport var freeBox__cw6Ca = \"PlasmicPlan-module--freeBox__cw6Ca--kwcmX\";\nexport var button__q34Ey = \"PlasmicPlan-module--button__q34Ey--JmmiX\";\nexport var svg__aeq = \"PlasmicPlan-module--svg__aeq--gjMzJ\";\nexport var svg__vjLNj = \"PlasmicPlan-module--svg__vjLNj---d6hp\";\nexport var svg__n7DOv = \"PlasmicPlan-module--svg__n7DOv--DJeLM\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicPlan } from \"./plasmic/proadject_com/PlasmicPlan\"\n\nfunction Plan(props) {\n  // Use PlasmicPlan to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicPlan are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all PlanProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicPlan {...props} />\n}\n\nexport default Plan\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: hmiK_aRvMWDf\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport BaseCard from \"../../BaseCard\" // plasmic-import: iNAkhDWaZXsp/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicFaq.module.css\" // plasmic-import: hmiK_aRvMWDf/css\n\nexport const PlasmicFaq__VariantProps = new Array()\n\nexport const PlasmicFaq__ArgProps = new Array(\"children\", \"slot\")\n\nfunction PlasmicFaq__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  return (\n    <BaseCard\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\"__wab_instance\", sty.root)}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox___4SYQk)}\n      >\n        <div className={classNames(projectcss.all, sty.freeBox__zsfG)}>\n          <div className={classNames(projectcss.all, sty.freeBox__sqgQ)}>\n            {p.renderPlasmicSlot({\n              defaultContents: \"Are there long-term contracts?\",\n              value: args.children,\n              className: classNames(sty.slotTargetChildren),\n            })}\n          </div>\n        </div>\n\n        {p.renderPlasmicSlot({\n          defaultContents:\n            \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\",\n          value: args.slot,\n          className: classNames(sty.slotTargetSlot),\n        })}\n      </p.Stack>\n    </BaseCard>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicFaq__ArgProps,\n      internalVariantPropNames: PlasmicFaq__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicFaq__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFaq\"\n  } else {\n    func.displayName = `PlasmicFaq.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFaq = Object.assign(\n  // Top-level PlasmicFaq renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicFaq\n    internalVariantProps: PlasmicFaq__VariantProps,\n    internalArgProps: PlasmicFaq__ArgProps,\n  }\n)\n\nexport default PlasmicFaq\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicFaq-module--root--e3vV8\";\nexport var freeBox___4SYQk = \"PlasmicFaq-module--freeBox___4SYQk--RPPWh\";\nexport var freeBox__zsfG = \"PlasmicFaq-module--freeBox__zsfG--44gEF\";\nexport var freeBox__sqgQ = \"PlasmicFaq-module--freeBox__sqgQ--yu+tE\";\nexport var slotTargetChildren = \"PlasmicFaq-module--slotTargetChildren--xIa3o\";\nexport var slotTargetSlot = \"PlasmicFaq-module--slotTargetSlot--wAv05\";\nexport var svg__emSad = \"PlasmicFaq-module--svg__emSad--sIz5x\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFaq } from \"./plasmic/proadject_com/PlasmicFaq\"\n\nfunction Faq(props) {\n  // Use PlasmicFaq to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFaq are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all FaqProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicFaq {...props} />\n}\n\nexport default Faq\n","// extracted by mini-css-extract-plugin\nexport var root = \"PlasmicPricing-module--root--smS4M\";\nexport var header = \"PlasmicPricing-module--header--Hscvw\";\nexport var pricingSection = \"PlasmicPricing-module--pricingSection--7ti0p\";\nexport var columns = \"PlasmicPricing-module--columns--kLTUR\";\nexport var column___9RNvH = \"PlasmicPricing-module--column___9RNvH--MCVgw\";\nexport var plan__tPlE5 = \"PlasmicPricing-module--plan__tPlE5--VX5x6\";\nexport var text___1J8Ck = \"PlasmicPricing-module--text___1J8Ck--fmtsS\";\nexport var freeBox__yjAf = \"PlasmicPricing-module--freeBox__yjAf--glyZS\";\nexport var bullet__d3Sd = \"PlasmicPricing-module--bullet__d3Sd--hULHb\";\nexport var bullet__hbZ2R = \"PlasmicPricing-module--bullet__hbZ2R--JqJ9R\";\nexport var bullet__ctA2J = \"PlasmicPricing-module--bullet__ctA2J--GzCon\";\nexport var button__rNBnU = \"PlasmicPricing-module--button__rNBnU--2dwRw\";\nexport var svg___1Pvg0 = \"PlasmicPricing-module--svg___1Pvg0--S31SY\";\nexport var svg__qrgPn = \"PlasmicPricing-module--svg__qrgPn--E0N4B\";\nexport var column__ar8Po = \"PlasmicPricing-module--column__ar8Po--sorK-\";\nexport var plan__vPzTy = \"PlasmicPricing-module--plan__vPzTy--G+wFn\";\nexport var text__hsS0G = \"PlasmicPricing-module--text__hsS0G--u7O0s\";\nexport var freeBox__eHN4 = \"PlasmicPricing-module--freeBox__eHN4--KdJ+i\";\nexport var bullet___3Vgg = \"PlasmicPricing-module--bullet___3Vgg--ZP+73\";\nexport var bullet__a64D4 = \"PlasmicPricing-module--bullet__a64D4--YHeix\";\nexport var bullet___2AMz = \"PlasmicPricing-module--bullet___2AMz--NRfH6\";\nexport var bullet___3GsjW = \"PlasmicPricing-module--bullet___3GsjW--RIh8X\";\nexport var button__lAuYj = \"PlasmicPricing-module--button__lAuYj--GwawI\";\nexport var svg__qR8H = \"PlasmicPricing-module--svg__qR8H--36CQR\";\nexport var svg__pcwn2 = \"PlasmicPricing-module--svg__pcwn2--9bQ55\";\nexport var column__rjiPo = \"PlasmicPricing-module--column__rjiPo--H72pj\";\nexport var plan__ny22X = \"PlasmicPricing-module--plan__ny22X--keMyE\";\nexport var text__prFdn = \"PlasmicPricing-module--text__prFdn--+NNvC\";\nexport var freeBox__nbIcE = \"PlasmicPricing-module--freeBox__nbIcE--6UecC\";\nexport var bullet__eXo = \"PlasmicPricing-module--bullet__eXo--G9ARB\";\nexport var bullet__gd9Cn = \"PlasmicPricing-module--bullet__gd9Cn--+rPsE\";\nexport var bullet__dxz7 = \"PlasmicPricing-module--bullet__dxz7--umMZF\";\nexport var button__eWntu = \"PlasmicPricing-module--button__eWntu--a03kv\";\nexport var svg__a1Url = \"PlasmicPricing-module--svg__a1Url--98Owt\";\nexport var svg__fom0T = \"PlasmicPricing-module--svg__fom0T--wtJ6I\";\nexport var faqSection = \"PlasmicPricing-module--faqSection--EDU6-\";\nexport var freeBox___4KONs = \"PlasmicPricing-module--freeBox___4KONs--8cadn\";\nexport var faq__xb3Yf = \"PlasmicPricing-module--faq__xb3Yf--iAKLz\";\nexport var faq__eC0NU = \"PlasmicPricing-module--faq__eC0NU--AW45t\";\nexport var footer = \"PlasmicPricing-module--footer--NprF5\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: jwrTbggFxYGg2J5Z7e7kjr\n// Component: PZbAI8_6BRmB\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: DxSpBmtY3B_/component\nimport Section from \"../../Section\" // plasmic-import: 6gH0r-9r71uO/component\nimport Plan from \"../../Plan\" // plasmic-import: wbMIVl9fXxkQ/component\nimport Bullet from \"../../Bullet\" // plasmic-import: 2iCIjF9Y6NHD/component\nimport Button from \"../../Button\" // plasmic-import: 58aE5A8cv3Bo/component\nimport Faq from \"../../Faq\" // plasmic-import: hmiK_aRvMWDf/component\nimport Footer from \"../../Footer\" // plasmic-import: FHue2TrcCQx/component\nimport { useScreenVariants as useScreenVariantspl90GPsIiFl9 } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: PL90GPsIiFl9/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_proadject_com.module.css\" // plasmic-import: jwrTbggFxYGg2J5Z7e7kjr/projectcss\nimport * as sty from \"./PlasmicPricing.module.css\" // plasmic-import: PZbAI8_6BRmB/css\n\nexport const PlasmicPricing__VariantProps = new Array()\n\nexport const PlasmicPricing__ArgProps = new Array()\n\nfunction PlasmicPricing__RenderFunc(props) {\n  const { variants, args, overrides, forNode, dataFetches } = props\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantspl90GPsIiFl9(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <Section\n            data-plasmic-name={\"pricingSection\"}\n            data-plasmic-override={overrides.pricingSection}\n            className={classNames(\"__wab_instance\", sty.pricingSection)}\n            hasSubtitle={\"hasSubtitle\"}\n            hasTitle={\"hasTitle\"}\n            subtitle={\n              \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n            }\n            title={\"Pricing\"}\n          >\n            <p.Stack\n              as={\"div\"}\n              data-plasmic-name={\"columns\"}\n              data-plasmic-override={overrides.columns}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.columns)}\n            >\n              <div className={classNames(projectcss.all, sty.column___9RNvH)}>\n                <Plan\n                  className={classNames(\"__wab_instance\", sty.plan__tPlE5)}\n                  price={\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___1J8Ck\n                      )}\n                    >\n                      {\"$10\"}\n                    </div>\n                  }\n                >\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__rNBnU)}\n                    color={\"outlineBlue\"}\n                  >\n                    {\"Get started\"}\n                  </Button>\n                </Plan>\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column__ar8Po)}>\n                <Plan\n                  className={classNames(\"__wab_instance\", sty.plan__vPzTy)}\n                  description={\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__eHN4)}\n                    >\n                      <Bullet\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.bullet___3Vgg\n                        )}\n                      />\n\n                      <Bullet\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.bullet__a64D4\n                        )}\n                      />\n\n                      <Bullet\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.bullet___2AMz\n                        )}\n                      />\n\n                      <Bullet\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.bullet___3GsjW\n                        )}\n                      />\n                    </p.Stack>\n                  }\n                  name={\"Team\"}\n                  price={\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__hsS0G\n                      )}\n                    >\n                      {\"$49\"}\n                    </div>\n                  }\n                >\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__lAuYj)}\n                    color={\"blue\"}\n                  >\n                    {\"Get started\"}\n                  </Button>\n                </Plan>\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column__rjiPo)}>\n                <Plan\n                  className={classNames(\"__wab_instance\", sty.plan__ny22X)}\n                  name={\"Enterprise\"}\n                  price={\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__prFdn\n                      )}\n                    >\n                      {\"$199\"}\n                    </div>\n                  }\n                >\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__eWntu)}\n                    color={\"outlineBlue\"}\n                  >\n                    {\"Get started\"}\n                  </Button>\n                </Plan>\n              </div>\n            </p.Stack>\n          </Section>\n\n          <Section\n            data-plasmic-name={\"faqSection\"}\n            data-plasmic-override={overrides.faqSection}\n            className={classNames(\"__wab_instance\", sty.faqSection)}\n            hasSubtitle={\"hasSubtitle\"}\n            hasTitle={\"hasTitle\"}\n            subtitle={\n              \"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n            }\n            title={\"FAQ\"}\n          >\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox___4KONs)}\n            >\n              <Faq\n                className={classNames(\"__wab_instance\", sty.faq__n5XQp)}\n                slot={\n                  \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                }\n              >\n                {\"Are there long-term contracts?\"}\n              </Faq>\n\n              <Faq\n                className={classNames(\"__wab_instance\", sty.faq__xb3Yf)}\n                slot={\n                  \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                }\n              >\n                {\"Can I add or remove licenses?\"}\n              </Faq>\n\n              <Faq\n                className={classNames(\"__wab_instance\", sty.faq__eC0NU)}\n                slot={\n                  \"Yes! You can. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat.\"\n                }\n              >\n                {\"Do you offer refunds?\"}\n              </Faq>\n            </p.Stack>\n          </Section>\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"header\", \"pricingSection\", \"columns\", \"faqSection\", \"footer\"],\n  header: [\"header\"],\n  pricingSection: [\"pricingSection\", \"columns\"],\n  columns: [\"columns\"],\n  faqSection: [\"faqSection\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicPricing__ArgProps,\n      internalVariantPropNames: PlasmicPricing__VariantProps,\n    })\n\n    const { dataFetches } = props\n    return PlasmicPricing__RenderFunc({\n      variants,\n      args,\n      overrides,\n      dataFetches,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicPricing\"\n  } else {\n    func.displayName = `PlasmicPricing.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicPricing = Object.assign(\n  // Top-level PlasmicPricing renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    pricingSection: makeNodeComponent(\"pricingSection\"),\n    columns: makeNodeComponent(\"columns\"),\n    faqSection: makeNodeComponent(\"faqSection\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicPricing\n    internalVariantProps: PlasmicPricing__VariantProps,\n    internalArgProps: PlasmicPricing__ArgProps,\n  }\n)\n\nexport default PlasmicPricing\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicPricing } from \"../components/plasmic/proadject_com/PlasmicPricing\"\n\nfunction Pricing() {\n  // Use PlasmicPricing to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicPricing are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicPricing is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicPricing />\n}\n\nexport default Pricing\n"],"names":["props","className","style","title","restProps","xmlns","viewBox","height","width","fill","classNames","d","PlasmicBullet__VariantProps","Array","PlasmicBullet__ArgProps","PlasmicDescendants","root","svg","makeNodeComponent","nodeName","func","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","dataFetches","as","hasGap","projectcss","role","p","defaultContents","value","children","PlasmicBullet__RenderFunc","displayName","PlasmicBullet","Object","assign","internalVariantProps","internalArgProps","Bullet_","ref","React","PlasmicBaseCard__VariantProps","PlasmicBaseCard__ArgProps","PlasmicBaseCard","hasVariant","iconBack","PlasmicBaseCard__RenderFunc","BaseCard_","PlasmicPlan__VariantProps","PlasmicPlan__ArgProps","PlasmicPlan","price","Bullet","description","Button","color","PlasmicPlan__RenderFunc","PlasmicFaq__VariantProps","PlasmicFaq__ArgProps","PlasmicFaq","slot","PlasmicFaq__RenderFunc","header","pricingSection","columns","column___9RNvH","plan__tPlE5","text___1J8Ck","button__rNBnU","column__ar8Po","plan__vPzTy","text__hsS0G","freeBox__eHN4","bullet___3Vgg","bullet__a64D4","bullet___2AMz","bullet___3GsjW","button__lAuYj","column__rjiPo","plan__ny22X","text__prFdn","button__eWntu","faqSection","freeBox___4KONs","faq__xb3Yf","faq__eC0NU","footer","PlasmicPricing__VariantProps","PlasmicPricing__ArgProps","ensureGlobalVariants","screen","useScreenVariantspl90GPsIiFl9","sty","Header","Section","hasSubtitle","hasTitle","subtitle","Footer","PlasmicPricing__RenderFunc","PlasmicPricing"],"sourceRoot":""}