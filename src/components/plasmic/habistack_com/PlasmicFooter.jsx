// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hhYAirYt8bU9TEjNgFzExf
// Component: tnj0d_eW4Ts
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import IconLink from "../../IconLink" // plasmic-import: AoqJDesXt_v/component
import TextInput from "../../TextInput" // plasmic-import: mt8AYmIOquuF/component
import Button from "../../Button" // plasmic-import: Tz4a3lVI6CGf/component
import { useScreenVariants as useScreenVariants_01LSGjai6PPg } from "./PlasmicGlobalVariant__Screen" // plasmic-import: 01lSGjai6pPg/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_habistack_com.module.css" // plasmic-import: hhYAirYt8bU9TEjNgFzExf/projectcss
import * as sty from "./PlasmicFooter.module.css" // plasmic-import: tnj0d_eW4Ts/css
import LogoIcon from "./icons/PlasmicIcon__Logo" // plasmic-import: IBdwO7K4X226/icon
import IconIcon from "./icons/PlasmicIcon__Icon" // plasmic-import: fRG7o45wBFgn/icon
import TwitterIconIcon from "./icons/PlasmicIcon__TwitterIcon" // plasmic-import: t5eU7xypoObb/icon
import GithubIconIcon from "./icons/PlasmicIcon__GithubIcon" // plasmic-import: Fcdq1Ejy4XxN/icon
import FacebookIconIcon from "./icons/PlasmicIcon__FacebookIcon" // plasmic-import: hdLeuFLK2xdT/icon
import copyrightIconYzobjF3 from "./images/copyrightIcon.png" // plasmic-import: Yzobj_f3_/picture

export const PlasmicFooter__VariantProps = new Array()

export const PlasmicFooter__ArgProps = new Array()

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_01LSGjai6PPg(),
  })

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(projectcss.all, sty.freeBox__o4MUa)} />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__yh9U6)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___9WTvX)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___3B7Ie)}
          >
            <IconLink
              data-plasmic-name={"iconLink"}
              data-plasmic-override={overrides.iconLink}
              className={classNames("__wab_instance", sty.iconLink)}
              icon={
                <LogoIcon
                  className={classNames(projectcss.all, sty.svg__nVuo)}
                  role={"img"}
                />
              }
            />

            <div className={classNames(projectcss.all, sty.freeBox___1Gcwe)}>
              <p.PlasmicLink
                data-plasmic-name={"httpsfathymcomtermsOfServices"}
                data-plasmic-override={overrides.httpsfathymcomtermsOfServices}
                className={classNames(
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.httpsfathymcomtermsOfServices
                )}
                component={Link}
                href={"https://fathym.com/terms-of-services/"}
                platform={"gatsby"}
                target={"_blank"}
              >
                {"Terms of Services"}
              </p.PlasmicLink>
            </div>

            <p.PlasmicLink
              data-plasmic-name={"httpsfathymcomprivacyPolicy"}
              data-plasmic-override={overrides.httpsfathymcomprivacyPolicy}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpsfathymcomprivacyPolicy
              )}
              component={Link}
              href={"https://fathym.com/privacy-policy/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Privacy Policy"}
            </p.PlasmicLink>

            <p.PlasmicLink
              data-plasmic-name={"httpsfathymcomenterpriseAgreement"}
              data-plasmic-override={
                overrides.httpsfathymcomenterpriseAgreement
              }
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpsfathymcomenterpriseAgreement
              )}
              component={Link}
              href={"https://fathym.com/enterprise-agreement/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Enterprise Agreement"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__kj2W)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uu6G5
              )}
            >
              {"Products"}
            </div>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwlowcodeunitcom"}
              data-plasmic-override={overrides.httpswwwlowcodeunitcom}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwlowcodeunitcom
              )}
              component={Link}
              href={"https://www.lowcodeunit.com/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"LowCodeUnit"}
            </p.PlasmicLink>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwiotEnsemblecom"}
              data-plasmic-override={overrides.httpswwwiotEnsemblecom}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwiotEnsemblecom
              )}
              component={Link}
              href={"https://www.iot-ensemble.com/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"IoT Ensemble"}
            </p.PlasmicLink>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwhabistackcom"}
              data-plasmic-override={overrides.httpswwwhabistackcom}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwhabistackcom
              )}
              component={Link}
              href={"https://www.habistack.com/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Habistack"}
            </p.PlasmicLink>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwproadjectcom"}
              data-plasmic-override={overrides.httpswwwproadjectcom}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwproadjectcom
              )}
              component={Link}
              href={"https://www.proadject.com/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"pROADject"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bVuy)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aQKqR
              )}
            >
              {"Resources"}
            </div>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwhabistackcomdocs"}
              data-plasmic-override={overrides.httpswwwhabistackcomdocs}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwhabistackcomdocs
              )}
              component={Link}
              href={"https://www.habistack.com/docs"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Documentation"}
            </p.PlasmicLink>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwhabistackcomblog"}
              data-plasmic-override={overrides.httpswwwhabistackcomblog}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwhabistackcomblog
              )}
              component={Link}
              href={"https://www.habistack.com/blog"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Blog"}
            </p.PlasmicLink>

            <p.PlasmicLink
              data-plasmic-name={"mailtosupportfathymcom"}
              data-plasmic-override={overrides.mailtosupportfathymcom}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.mailtosupportfathymcom
              )}
              component={Link}
              href={"mailto:support@fathym.com"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Support"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__e8C2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6NUk
              )}
            >
              {"Company"}
            </div>

            <p.PlasmicLink
              data-plasmic-name={"httpswwwfathymcom"}
              data-plasmic-override={overrides.httpswwwfathymcom}
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.httpswwwfathymcom
              )}
              component={Link}
              href={"https://www.fathym.com/"}
              platform={"gatsby"}
              target={"_blank"}
            >
              {"Home"}
            </p.PlasmicLink>
          </p.Stack>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__iwpD)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wX3Lh
                )}
              >
                {"Subscribe"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cy5Gi
                )}
              >
                {"Get the latest news and articles to your inbox every month."}
              </div>

              <TextInput
                data-plasmic-name={"textInput"}
                data-plasmic-override={overrides.textInput}
                className={classNames("__wab_instance", sty.textInput)}
                endIcon={
                  <Button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                    color={"clear"}
                    size={"compact"}
                    startIcon={
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__n38Ec)}
                        role={"img"}
                      />
                    }
                  >
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___1ZgSa)}
                      role={"img"}
                    />
                  </Button>
                }
                fontSize={"small"}
                placeholder={"Your email"}
                showEndIcon={"showEndIcon"}
              />
            </p.Stack>
          ) : null}
        </p.Stack>
      </p.Stack>

      <div className={classNames(projectcss.all, sty.freeBox__znNa)} />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__jqjPm)}
      >
        <div className={classNames(projectcss.all, sty.freeBox___8JHt)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wi6PH
            )}
          >
            {"Copyright "}
          </div>

          <p.PlasmicImg
            data-plasmic-name={"img"}
            data-plasmic-override={overrides.img}
            alt={""}
            className={classNames(sty.img)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: copyrightIconYzobjF3,
              fullWidth: 24,
              fullHeight: 24,
              aspectRatio: undefined,
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__zEbF
            )}
          >
            {" 2022 Fathym. All rights reserved."}
          </div>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__q2LUz)}
        >
          <IconLink
            data-plasmic-name={"fathymIt"}
            data-plasmic-override={overrides.fathymIt}
            className={classNames("__wab_instance", sty.fathymIt)}
            icon={
              <TwitterIconIcon
                data-plasmic-name={"twitter"}
                data-plasmic-override={overrides.twitter}
                className={classNames(projectcss.all, sty.twitter)}
                role={"img"}
              />
            }
          />

          <IconLink
            data-plasmic-name={"httpsgithubcomfathym"}
            data-plasmic-override={overrides.httpsgithubcomfathym}
            className={classNames("__wab_instance", sty.httpsgithubcomfathym)}
            icon={
              <GithubIconIcon
                data-plasmic-name={"gitHub"}
                data-plasmic-override={overrides.gitHub}
                className={classNames(projectcss.all, sty.gitHub)}
                role={"img"}
              />
            }
          />

          <IconLink
            data-plasmic-name={"httpswwwfacebookcomFathymInc"}
            data-plasmic-override={overrides.httpswwwfacebookcomFathymInc}
            className={classNames(
              "__wab_instance",
              sty.httpswwwfacebookcomFathymInc
            )}
            icon={
              <FacebookIconIcon
                data-plasmic-name={"facebook"}
                data-plasmic-override={overrides.facebook}
                className={classNames(projectcss.all, sty.facebook)}
                role={"img"}
              />
            }
          />
        </p.Stack>
      </p.Stack>
    </p.Stack>
  )
}

const PlasmicDescendants = {
  root: [
    "root",
    "iconLink",
    "httpsfathymcomtermsOfServices",
    "httpsfathymcomprivacyPolicy",
    "httpsfathymcomenterpriseAgreement",
    "httpswwwlowcodeunitcom",
    "httpswwwiotEnsemblecom",
    "httpswwwhabistackcom",
    "httpswwwproadjectcom",
    "httpswwwhabistackcomdocs",
    "httpswwwhabistackcomblog",
    "mailtosupportfathymcom",
    "httpswwwfathymcom",
    "textInput",
    "textbox",
    "button",
    "img",
    "fathymIt",
    "twitter",
    "httpsgithubcomfathym",
    "gitHub",
    "httpswwwfacebookcomFathymInc",
    "facebook",
  ],

  iconLink: ["iconLink"],
  httpsfathymcomtermsOfServices: ["httpsfathymcomtermsOfServices"],
  httpsfathymcomprivacyPolicy: ["httpsfathymcomprivacyPolicy"],
  httpsfathymcomenterpriseAgreement: ["httpsfathymcomenterpriseAgreement"],
  httpswwwlowcodeunitcom: ["httpswwwlowcodeunitcom"],
  httpswwwiotEnsemblecom: ["httpswwwiotEnsemblecom"],
  httpswwwhabistackcom: ["httpswwwhabistackcom"],
  httpswwwproadjectcom: ["httpswwwproadjectcom"],
  httpswwwhabistackcomdocs: ["httpswwwhabistackcomdocs"],
  httpswwwhabistackcomblog: ["httpswwwhabistackcomblog"],
  mailtosupportfathymcom: ["mailtosupportfathymcom"],
  httpswwwfathymcom: ["httpswwwfathymcom"],
  textInput: ["textInput", "textbox", "button"],
  button: ["button"],
  img: ["img"],
  fathymIt: ["fathymIt", "twitter"],
  twitter: ["twitter"],
  httpsgithubcomfathym: ["httpsgithubcomfathym", "gitHub"],
  gitHub: ["gitHub"],
  httpswwwfacebookcomFathymInc: ["httpswwwfacebookcomFathymInc", "facebook"],
  facebook: ["facebook"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter"
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`
  }
  return func
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    iconLink: makeNodeComponent("iconLink"),
    httpsfathymcomtermsOfServices: makeNodeComponent(
      "httpsfathymcomtermsOfServices"
    ),

    httpsfathymcomprivacyPolicy: makeNodeComponent(
      "httpsfathymcomprivacyPolicy"
    ),

    httpsfathymcomenterpriseAgreement: makeNodeComponent(
      "httpsfathymcomenterpriseAgreement"
    ),

    httpswwwlowcodeunitcom: makeNodeComponent("httpswwwlowcodeunitcom"),
    httpswwwiotEnsemblecom: makeNodeComponent("httpswwwiotEnsemblecom"),
    httpswwwhabistackcom: makeNodeComponent("httpswwwhabistackcom"),
    httpswwwproadjectcom: makeNodeComponent("httpswwwproadjectcom"),
    httpswwwhabistackcomdocs: makeNodeComponent("httpswwwhabistackcomdocs"),
    httpswwwhabistackcomblog: makeNodeComponent("httpswwwhabistackcomblog"),
    mailtosupportfathymcom: makeNodeComponent("mailtosupportfathymcom"),
    httpswwwfathymcom: makeNodeComponent("httpswwwfathymcom"),
    textInput: makeNodeComponent("textInput"),
    button: makeNodeComponent("button"),
    img: makeNodeComponent("img"),
    fathymIt: makeNodeComponent("fathymIt"),
    twitter: makeNodeComponent("twitter"),
    httpsgithubcomfathym: makeNodeComponent("httpsgithubcomfathym"),
    gitHub: makeNodeComponent("gitHub"),
    httpswwwfacebookcomFathymInc: makeNodeComponent(
      "httpswwwfacebookcomFathymInc"
    ),

    facebook: makeNodeComponent("facebook"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps,
  }
)

export default PlasmicFooter
/* prettier-ignore-end */
